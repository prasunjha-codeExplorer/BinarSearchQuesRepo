
class Solution {
    public static int binarySearch(int[] arr,int start,int end,int k){
        int ans=0;
        while(start<=end){
            int mid = start + (end-start)/2;
            int sum=0;
            int countAllocations=1;
            for(int i=0; i<arr.length; i++){
                if(sum+arr[i] <= mid){
                    sum+=arr[i];
                }else{
                    sum=arr[i];
                    countAllocations++;
                }
            }
            if(countAllocations <= k){
                end = mid-1;
            }
            else if(countAllocations > k){
                start = mid+1;
            }
        }
        return start;
    }
    public static int findPages(int[] arr, int k) {
        // code here
        int start=Integer.MIN_VALUE;
        int end=0;
        for(int i=0; i<arr.length; i++){
            start = Math.max(arr[i],start);
            end+=arr[i];
        }
        if(k > arr.length){return -1;}
        if(k==1){return end;}
        if(k==arr.length){return start;}
        return binarySearch(arr,start,end,k);
    }
}
